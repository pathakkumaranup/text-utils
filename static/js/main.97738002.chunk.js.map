{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","value","onChange","event","target","rows","background","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","word","alert","role","msg","prototype","PropTypes","string","App","setmode","setAlert","message","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.97738002.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default function Navbar(props) {\r\n    return (\r\n      <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n              {props.title}\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                    Home\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" href=\"#\">\r\n                    About\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <form className=\"d-flex\">\r\n                <div className={`form-check form-switch text-${props.mode==\"dark\"?\"light\":\"dark\"}`}>\r\n                  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>\r\n                {/* <input\r\n                  className=\"form-control me-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                />\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Search\r\n                </button> */}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n}\r\n\r\nNavbar.prototype={\r\n    title:PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Text is converted to Uppercase\",\"Success\");\r\n    }\r\n    const handleLowerClick=()=>{\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Text is converted to Lowercase\",\"Success\");\r\n\r\n    }\r\n    const handleClearClick=()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text is cleared\",\"Success\");\r\n\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text is copied to clipboard\",\"Success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[  ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\",\"Success\");\r\n\r\n    }\r\n    const [text, setText]=useState(\"\");\r\n\r\n    return (\r\n        <>\r\n          <div className=\"container\" style={{color:props.mode==\"dark\"?\"white\":\"#001a76\"}}>\r\n          <h1>Enter Your Text Below</h1>\r\n          <div className=\"mb-3\" >\r\n          <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\" style={{background:props.mode==\"dark\"?\"#afe0ee\":\"white\",color:props.mode==\"dark\"?\"white\":\"#0e0200\"}}></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>Convert To Lowercase</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n          <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n\r\n      </div>\r\n      <div className=\"container my-4\" style={{color:props.mode==\"dark\"?\"white\":\"#001a76\"}}>\r\n          <h2>\r\n            Your Text Summary\r\n          </h2> \r\n          <p>\r\n              Total words : {text.split(\" \").length}   \r\n          </p>\r\n          <p>\r\n              Total Chars : {text.length}  \r\n          </p>\r\n          <p>Time to read : {0.008 * text.split(\" \").length}</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter Something in The Box\"}</p>\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        return word.toLowerCase();\r\n    }\r\n    return (\r\n        <div>\r\n           <div className={`alert alert-${props.alert==null?\"warning\":capitalize(props.alert.type)} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert==null?\"\":props.alert.type}</strong> : {props.alert==null?\"\":props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) =>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type\r\n    });\r\n  }\r\n  const toggleMode = () =>{\r\n    if(mode===\"dark\"){\r\n      setmode(\"light\");\r\n      showAlert(\"Light Mode is Enabled\", \"Success\");\r\n      document.body.style.backgroundColor=\"white\";\r\n    }\r\n    else{\r\n      setmode(\"dark\");\r\n      showAlert(\"Dark Mode is Enabled\", \"Success\")\r\n      document.body.style.backgroundColor=\"#001a76\";\r\n    }\r\n  }\r\n  return (\r\n   <>\r\n   {/* <Router> */}\r\n   <Navbar title=\"Text-Utils\" mode={mode} toggleMode={toggleMode}></Navbar>\r\n   <Alert alert={alert} />\r\n    {/* <TextForm mode={mode} showAlert={showAlert}></TextForm>  */}\r\n    \r\n   {/* <Switch>\r\n          <Route path=\"/about\">\r\n          <About mode={mode}/>\r\n          </Route>\r\n          <Route path=\"\"> */}\r\n            <TextForm mode={mode} showAlert={showAlert}></TextForm>\r\n          {/* </Route>\r\n        </Switch>\r\n   </Router> */}\r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}